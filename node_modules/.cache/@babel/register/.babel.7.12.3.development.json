{
  "{\"sourceRoot\":\"/home/emils/Documents/Code/Libraries/create-component/scripts/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/emils/Documents/Code/Libraries/create-component\",\"filename\":\"/home/emils/Documents/Code/Libraries/create-component/scripts/createComponent.babel.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/emils/Documents/Code/Libraries/create-component\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.12.3": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/emils/Documents/Code/Libraries/create-component/scripts/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/emils/Documents/Code/Libraries/create-component",
      "filename": "/home/emils/Documents/Code/Libraries/create-component/scripts/createComponent.babel.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/emils/Documents/Code/Libraries/create-component",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/emils/Documents/Code/Libraries/create-component/scripts/createComponent.babel.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/emils/Documents/Code/Libraries/create-component/scripts/createComponent.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/emils/Documents/Code/Libraries/create-component/scripts/",
        "sourceFileName": "createComponent.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _gulp = require(\"gulp\");\n\nvar _gulpTemplate = _interopRequireDefault(require(\"gulp-template\"));\n\nvar _gulpRename = _interopRequireDefault(require(\"gulp-rename\"));\n\nvar _chalk = _interopRequireDefault(require(\"chalk\"));\n\nvar _yargs = require(\"yargs\");\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// TO RUN \n// gulp --gulpfile scripts/createComponent.babel.js --name \"Penis\"\n// Function called to throw any kind of an error\nvar createError = function createError(errorMessage) {\n  throw _chalk.default.white.bgRed.bold(errorMessage);\n}; // Extracting component name provided by user through the --name flag\n\n\nvar nameArg = _yargs.argv.name; // Checking the validity of name variable given by user\n\nif (!nameArg || nameArg === true || nameArg.replace(' ', '').length === 0) {\n  createError(\"\\n        A name is required to create a container. \\n        You can do so by running: \\n        npm run create:container --name yourContainerName\\n    \");\n} // Converts any name given by user to one where the first character is uppercase\n\n\nvar name = nameArg.charAt(0).toUpperCase() + nameArg.slice(1);\nvar destDir = \"../src/components/\".concat(name);\n\nvar assertContainerDoesNotExist = function assertContainerDoesNotExist(done) {\n  var containerDirectoryExists = _fs.default.existsSync(\"../src/components/\".concat(name));\n\n  if (containerDirectoryExists) {\n    createError(\"Could not create container, because the directory: '../src/components/\".concat(name, \"' already exists\"));\n    done();\n  }\n\n  done();\n};\n\nvar component = function component() {\n  return (0, _gulp.src)('templates/Component.js').pipe((0, _gulpRename.default)(\"\".concat(name, \".js\"))).pipe((0, _gulpTemplate.default)({\n    name: name\n  })).pipe((0, _gulp.dest)(destDir));\n};\n\nvar story = function story() {\n  return (0, _gulp.src)('templates/Story.js').pipe((0, _gulpRename.default)(\"\".concat(name, \".stories.js\"))).pipe((0, _gulpTemplate.default)({\n    name: name\n  })).pipe((0, _gulp.dest)(destDir));\n};\n\nvar index = function index() {\n  return (0, _gulp.src)(\"templates/index.js\").pipe((0, _gulpTemplate.default)({\n    name: name\n  })).pipe((0, _gulp.dest)(destDir));\n};\n\nvar styles = function styles() {\n  return (0, _gulp.src)('templates/Styles.scss').pipe((0, _gulp.dest)(destDir));\n};\n\nvar styleConstants = function styleConstants() {\n  return (0, _gulp.src)('templates/Constants.scss').pipe((0, _gulp.dest)(destDir));\n};\n\nvar logSuccess = function logSuccess(done) {\n  console.log(_chalk.default.white.bgGreen(\"Successfully created container\"));\n  console.log(\"change \".concat(_chalk.default.green.bgBlack.bold('src/components/Penis'), \" to get started\"));\n  done();\n};\n\nexports.default = (0, _gulp.series)(assertContainerDoesNotExist, (0, _gulp.parallel)(component, story, index, styles, styleConstants), logSuccess);\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNyZWF0ZUNvbXBvbmVudC5iYWJlbC5qcyJdLCJuYW1lcyI6WyJjcmVhdGVFcnJvciIsImVycm9yTWVzc2FnZSIsImNoYWxrIiwid2hpdGUiLCJiZ1JlZCIsImJvbGQiLCJuYW1lQXJnIiwiYXJndiIsIm5hbWUiLCJyZXBsYWNlIiwibGVuZ3RoIiwiY2hhckF0IiwidG9VcHBlckNhc2UiLCJzbGljZSIsImRlc3REaXIiLCJhc3NlcnRDb250YWluZXJEb2VzTm90RXhpc3QiLCJkb25lIiwiY29udGFpbmVyRGlyZWN0b3J5RXhpc3RzIiwiZnMiLCJleGlzdHNTeW5jIiwiY29tcG9uZW50IiwicGlwZSIsInN0b3J5IiwiaW5kZXgiLCJzdHlsZXMiLCJzdHlsZUNvbnN0YW50cyIsImxvZ1N1Y2Nlc3MiLCJjb25zb2xlIiwibG9nIiwiYmdHcmVlbiIsImdyZWVuIiwiYmdCbGFjayIsImV4cG9ydHMiLCJkZWZhdWx0Il0sIm1hcHBpbmdzIjoiOztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBRUE7QUFDQTtBQUlBO0FBQ0EsSUFBTUEsV0FBVyxHQUFHLFNBQWRBLFdBQWMsQ0FBQ0MsWUFBRCxFQUFrQjtBQUNsQyxRQUFNQyxlQUFNQyxLQUFOLENBQVlDLEtBQVosQ0FBa0JDLElBQWxCLENBQXVCSixZQUF2QixDQUFOO0FBQ0gsQ0FGRCxDLENBSUE7OztBQUNBLElBQU1LLE9BQU8sR0FBR0MsWUFBS0MsSUFBckIsQyxDQUVBOztBQUNBLElBQUksQ0FBQ0YsT0FBRCxJQUFZQSxPQUFPLEtBQUssSUFBeEIsSUFBZ0NBLE9BQU8sQ0FBQ0csT0FBUixDQUFnQixHQUFoQixFQUFxQixFQUFyQixFQUF5QkMsTUFBekIsS0FBb0MsQ0FBeEUsRUFBMkU7QUFDdkVWLEVBQUFBLFdBQVcsNkpBQVg7QUFLSCxDLENBRUQ7OztBQUNBLElBQU1RLElBQUksR0FBR0YsT0FBTyxDQUFDSyxNQUFSLENBQWUsQ0FBZixFQUFrQkMsV0FBbEIsS0FBa0NOLE9BQU8sQ0FBQ08sS0FBUixDQUFjLENBQWQsQ0FBL0M7QUFFQSxJQUFNQyxPQUFPLCtCQUF3Qk4sSUFBeEIsQ0FBYjs7QUFFQSxJQUFNTywyQkFBMkIsR0FBRyxTQUE5QkEsMkJBQThCLENBQUNDLElBQUQsRUFBVTtBQUMxQyxNQUFNQyx3QkFBd0IsR0FBR0MsWUFBR0MsVUFBSCw2QkFBbUNYLElBQW5DLEVBQWpDOztBQUNBLE1BQUlTLHdCQUFKLEVBQThCO0FBQzFCakIsSUFBQUEsV0FBVyxpRkFBMEVRLElBQTFFLHNCQUFYO0FBQ0FRLElBQUFBLElBQUk7QUFDUDs7QUFDREEsRUFBQUEsSUFBSTtBQUNQLENBUEQ7O0FBU0EsSUFBTUksU0FBUyxHQUFHLFNBQVpBLFNBQVksR0FBTTtBQUNwQixTQUFPLGVBQUksd0JBQUosRUFDRkMsSUFERSxDQUNHLG1DQUFVYixJQUFWLFNBREgsRUFFRmEsSUFGRSxDQUVHLDJCQUFTO0FBQUNiLElBQUFBLElBQUksRUFBSkE7QUFBRCxHQUFULENBRkgsRUFHRmEsSUFIRSxDQUdHLGdCQUFLUCxPQUFMLENBSEgsQ0FBUDtBQUlILENBTEQ7O0FBT0EsSUFBTVEsS0FBSyxHQUFHLFNBQVJBLEtBQVEsR0FBTTtBQUNoQixTQUFPLGVBQUksb0JBQUosRUFDRkQsSUFERSxDQUNHLG1DQUFVYixJQUFWLGlCQURILEVBRUZhLElBRkUsQ0FFRywyQkFBUztBQUFDYixJQUFBQSxJQUFJLEVBQUpBO0FBQUQsR0FBVCxDQUZILEVBR0ZhLElBSEUsQ0FHRyxnQkFBS1AsT0FBTCxDQUhILENBQVA7QUFJSCxDQUxEOztBQU9BLElBQU1TLEtBQUssR0FBRyxTQUFSQSxLQUFRLEdBQU07QUFDaEIsU0FBTyxxQ0FDRkYsSUFERSxDQUNHLDJCQUFTO0FBQUNiLElBQUFBLElBQUksRUFBSkE7QUFBRCxHQUFULENBREgsRUFFRmEsSUFGRSxDQUVHLGdCQUFLUCxPQUFMLENBRkgsQ0FBUDtBQUdILENBSkQ7O0FBTUEsSUFBTVUsTUFBTSxHQUFHLFNBQVRBLE1BQVMsR0FBTTtBQUNqQixTQUFPLGVBQUksdUJBQUosRUFDRkgsSUFERSxDQUNHLGdCQUFLUCxPQUFMLENBREgsQ0FBUDtBQUVILENBSEQ7O0FBS0EsSUFBTVcsY0FBYyxHQUFHLFNBQWpCQSxjQUFpQixHQUFNO0FBQ3pCLFNBQU8sZUFBSSwwQkFBSixFQUNGSixJQURFLENBQ0csZ0JBQUtQLE9BQUwsQ0FESCxDQUFQO0FBRUgsQ0FIRDs7QUFLQSxJQUFNWSxVQUFVLEdBQUcsU0FBYkEsVUFBYSxDQUFDVixJQUFELEVBQVU7QUFDekJXLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZMUIsZUFBTUMsS0FBTixDQUFZMEIsT0FBWixrQ0FBWjtBQUNBRixFQUFBQSxPQUFPLENBQUNDLEdBQVIsa0JBQXNCMUIsZUFBTTRCLEtBQU4sQ0FBWUMsT0FBWixDQUFvQjFCLElBQXBCLENBQXlCLHNCQUF6QixDQUF0QjtBQUNBVyxFQUFBQSxJQUFJO0FBQ1AsQ0FKRDs7QUFNQWdCLE9BQU8sQ0FBQ0MsT0FBUixHQUFrQixrQkFDZGxCLDJCQURjLEVBRWQsb0JBQ0lLLFNBREosRUFFSUUsS0FGSixFQUdJQyxLQUhKLEVBSUlDLE1BSkosRUFLSUMsY0FMSixDQUZjLEVBU2RDLFVBVGMsQ0FBbEIiLCJzb3VyY2VSb290IjoiL2hvbWUvZW1pbHMvRG9jdW1lbnRzL0NvZGUvTGlicmFyaWVzL2NyZWF0ZS1jb21wb25lbnQvc2NyaXB0cy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3NyYywgZGVzdCwgc2VyaWVzLCBwYXJhbGxlbH0gZnJvbSAnZ3VscCc7XG5pbXBvcnQgdGVtcGxhdGUgZnJvbSAnZ3VscC10ZW1wbGF0ZSc7XG5pbXBvcnQgcmVuYW1lIGZyb20gJ2d1bHAtcmVuYW1lJztcbmltcG9ydCBjaGFsayBmcm9tICdjaGFsayc7XG5pbXBvcnQge2FyZ3Z9IGZyb20gJ3lhcmdzJztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5cbi8vIFRPIFJVTiBcbi8vIGd1bHAgLS1ndWxwZmlsZSBzY3JpcHRzL2NyZWF0ZUNvbXBvbmVudC5iYWJlbC5qcyAtLW5hbWUgXCJQZW5pc1wiXG5cblxuXG4vLyBGdW5jdGlvbiBjYWxsZWQgdG8gdGhyb3cgYW55IGtpbmQgb2YgYW4gZXJyb3JcbmNvbnN0IGNyZWF0ZUVycm9yID0gKGVycm9yTWVzc2FnZSkgPT4ge1xuICAgIHRocm93IGNoYWxrLndoaXRlLmJnUmVkLmJvbGQoZXJyb3JNZXNzYWdlKVxufVxuXG4vLyBFeHRyYWN0aW5nIGNvbXBvbmVudCBuYW1lIHByb3ZpZGVkIGJ5IHVzZXIgdGhyb3VnaCB0aGUgLS1uYW1lIGZsYWdcbmNvbnN0IG5hbWVBcmcgPSBhcmd2Lm5hbWVcblxuLy8gQ2hlY2tpbmcgdGhlIHZhbGlkaXR5IG9mIG5hbWUgdmFyaWFibGUgZ2l2ZW4gYnkgdXNlclxuaWYgKCFuYW1lQXJnIHx8IG5hbWVBcmcgPT09IHRydWUgfHwgbmFtZUFyZy5yZXBsYWNlKCcgJywgJycpLmxlbmd0aCA9PT0gMCkge1xuICAgIGNyZWF0ZUVycm9yKGBcbiAgICAgICAgQSBuYW1lIGlzIHJlcXVpcmVkIHRvIGNyZWF0ZSBhIGNvbnRhaW5lci4gXG4gICAgICAgIFlvdSBjYW4gZG8gc28gYnkgcnVubmluZzogXG4gICAgICAgIG5wbSBydW4gY3JlYXRlOmNvbnRhaW5lciAtLW5hbWUgeW91ckNvbnRhaW5lck5hbWVcbiAgICBgKVxufVxuXG4vLyBDb252ZXJ0cyBhbnkgbmFtZSBnaXZlbiBieSB1c2VyIHRvIG9uZSB3aGVyZSB0aGUgZmlyc3QgY2hhcmFjdGVyIGlzIHVwcGVyY2FzZVxuY29uc3QgbmFtZSA9IG5hbWVBcmcuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBuYW1lQXJnLnNsaWNlKDEpXG5cbmNvbnN0IGRlc3REaXIgPSBgLi4vc3JjL2NvbXBvbmVudHMvJHtuYW1lfWBcblxuY29uc3QgYXNzZXJ0Q29udGFpbmVyRG9lc05vdEV4aXN0ID0gKGRvbmUpID0+IHtcbiAgICBjb25zdCBjb250YWluZXJEaXJlY3RvcnlFeGlzdHMgPSBmcy5leGlzdHNTeW5jKGAuLi9zcmMvY29tcG9uZW50cy8ke25hbWV9YClcbiAgICBpZiAoY29udGFpbmVyRGlyZWN0b3J5RXhpc3RzKSB7XG4gICAgICAgIGNyZWF0ZUVycm9yKGBDb3VsZCBub3QgY3JlYXRlIGNvbnRhaW5lciwgYmVjYXVzZSB0aGUgZGlyZWN0b3J5OiAnLi4vc3JjL2NvbXBvbmVudHMvJHtuYW1lfScgYWxyZWFkeSBleGlzdHNgKVxuICAgICAgICBkb25lKClcbiAgICB9XG4gICAgZG9uZSgpXG59XG5cbmNvbnN0IGNvbXBvbmVudCA9ICgpID0+IHtcbiAgICByZXR1cm4gc3JjKCd0ZW1wbGF0ZXMvQ29tcG9uZW50LmpzJylcbiAgICAgICAgLnBpcGUocmVuYW1lKGAke25hbWV9LmpzYCkpXG4gICAgICAgIC5waXBlKHRlbXBsYXRlKHtuYW1lfSkpXG4gICAgICAgIC5waXBlKGRlc3QoZGVzdERpcikpO1xufVxuXG5jb25zdCBzdG9yeSA9ICgpID0+IHtcbiAgICByZXR1cm4gc3JjKCd0ZW1wbGF0ZXMvU3RvcnkuanMnKVxuICAgICAgICAucGlwZShyZW5hbWUoYCR7bmFtZX0uc3Rvcmllcy5qc2ApKVxuICAgICAgICAucGlwZSh0ZW1wbGF0ZSh7bmFtZX0pKVxuICAgICAgICAucGlwZShkZXN0KGRlc3REaXIpKVxufVxuXG5jb25zdCBpbmRleCA9ICgpID0+IHtcbiAgICByZXR1cm4gc3JjKGB0ZW1wbGF0ZXMvaW5kZXguanNgKVxuICAgICAgICAucGlwZSh0ZW1wbGF0ZSh7bmFtZX0pKVxuICAgICAgICAucGlwZShkZXN0KGRlc3REaXIpKVxufVxuXG5jb25zdCBzdHlsZXMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHNyYygndGVtcGxhdGVzL1N0eWxlcy5zY3NzJylcbiAgICAgICAgLnBpcGUoZGVzdChkZXN0RGlyKSlcbn1cblxuY29uc3Qgc3R5bGVDb25zdGFudHMgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHNyYygndGVtcGxhdGVzL0NvbnN0YW50cy5zY3NzJylcbiAgICAgICAgLnBpcGUoZGVzdChkZXN0RGlyKSlcbn1cblxuY29uc3QgbG9nU3VjY2VzcyA9IChkb25lKSA9PiB7XG4gICAgY29uc29sZS5sb2coY2hhbGsud2hpdGUuYmdHcmVlbihgU3VjY2Vzc2Z1bGx5IGNyZWF0ZWQgY29udGFpbmVyYCkpXG4gICAgY29uc29sZS5sb2coYGNoYW5nZSAke2NoYWxrLmdyZWVuLmJnQmxhY2suYm9sZCgnc3JjL2NvbXBvbmVudHMvUGVuaXMnKX0gdG8gZ2V0IHN0YXJ0ZWRgKVxuICAgIGRvbmUoKTtcbn1cbiAgXG5leHBvcnRzLmRlZmF1bHQgPSBzZXJpZXMoXG4gICAgYXNzZXJ0Q29udGFpbmVyRG9lc05vdEV4aXN0LFxuICAgIHBhcmFsbGVsKFxuICAgICAgICBjb21wb25lbnQsXG4gICAgICAgIHN0b3J5LFxuICAgICAgICBpbmRleCxcbiAgICAgICAgc3R5bGVzLFxuICAgICAgICBzdHlsZUNvbnN0YW50c1xuICAgICksXG4gICAgbG9nU3VjY2Vzc1xuKSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "createComponent.babel.js"
      ],
      "names": [
        "createError",
        "errorMessage",
        "chalk",
        "white",
        "bgRed",
        "bold",
        "nameArg",
        "argv",
        "name",
        "replace",
        "length",
        "charAt",
        "toUpperCase",
        "slice",
        "destDir",
        "assertContainerDoesNotExist",
        "done",
        "containerDirectoryExists",
        "fs",
        "existsSync",
        "component",
        "pipe",
        "story",
        "index",
        "styles",
        "styleConstants",
        "logSuccess",
        "console",
        "log",
        "bgGreen",
        "green",
        "bgBlack",
        "exports",
        "default"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA;AACA;AAIA;AACA,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,YAAD,EAAkB;AAClC,QAAMC,eAAMC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuBJ,YAAvB,CAAN;AACH,CAFD,C,CAIA;;;AACA,IAAMK,OAAO,GAAGC,YAAKC,IAArB,C,CAEA;;AACA,IAAI,CAACF,OAAD,IAAYA,OAAO,KAAK,IAAxB,IAAgCA,OAAO,CAACG,OAAR,CAAgB,GAAhB,EAAqB,EAArB,EAAyBC,MAAzB,KAAoC,CAAxE,EAA2E;AACvEV,EAAAA,WAAW,6JAAX;AAKH,C,CAED;;;AACA,IAAMQ,IAAI,GAAGF,OAAO,CAACK,MAAR,CAAe,CAAf,EAAkBC,WAAlB,KAAkCN,OAAO,CAACO,KAAR,CAAc,CAAd,CAA/C;AAEA,IAAMC,OAAO,+BAAwBN,IAAxB,CAAb;;AAEA,IAAMO,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,IAAD,EAAU;AAC1C,MAAMC,wBAAwB,GAAGC,YAAGC,UAAH,6BAAmCX,IAAnC,EAAjC;;AACA,MAAIS,wBAAJ,EAA8B;AAC1BjB,IAAAA,WAAW,iFAA0EQ,IAA1E,sBAAX;AACAQ,IAAAA,IAAI;AACP;;AACDA,EAAAA,IAAI;AACP,CAPD;;AASA,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,SAAO,eAAI,wBAAJ,EACFC,IADE,CACG,mCAAUb,IAAV,SADH,EAEFa,IAFE,CAEG,2BAAS;AAACb,IAAAA,IAAI,EAAJA;AAAD,GAAT,CAFH,EAGFa,IAHE,CAGG,gBAAKP,OAAL,CAHH,CAAP;AAIH,CALD;;AAOA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,SAAO,eAAI,oBAAJ,EACFD,IADE,CACG,mCAAUb,IAAV,iBADH,EAEFa,IAFE,CAEG,2BAAS;AAACb,IAAAA,IAAI,EAAJA;AAAD,GAAT,CAFH,EAGFa,IAHE,CAGG,gBAAKP,OAAL,CAHH,CAAP;AAIH,CALD;;AAOA,IAAMS,KAAK,GAAG,SAARA,KAAQ,GAAM;AAChB,SAAO,qCACFF,IADE,CACG,2BAAS;AAACb,IAAAA,IAAI,EAAJA;AAAD,GAAT,CADH,EAEFa,IAFE,CAEG,gBAAKP,OAAL,CAFH,CAAP;AAGH,CAJD;;AAMA,IAAMU,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,SAAO,eAAI,uBAAJ,EACFH,IADE,CACG,gBAAKP,OAAL,CADH,CAAP;AAEH,CAHD;;AAKA,IAAMW,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AACzB,SAAO,eAAI,0BAAJ,EACFJ,IADE,CACG,gBAAKP,OAAL,CADH,CAAP;AAEH,CAHD;;AAKA,IAAMY,UAAU,GAAG,SAAbA,UAAa,CAACV,IAAD,EAAU;AACzBW,EAAAA,OAAO,CAACC,GAAR,CAAY1B,eAAMC,KAAN,CAAY0B,OAAZ,kCAAZ;AACAF,EAAAA,OAAO,CAACC,GAAR,kBAAsB1B,eAAM4B,KAAN,CAAYC,OAAZ,CAAoB1B,IAApB,CAAyB,sBAAzB,CAAtB;AACAW,EAAAA,IAAI;AACP,CAJD;;AAMAgB,OAAO,CAACC,OAAR,GAAkB,kBACdlB,2BADc,EAEd,oBACIK,SADJ,EAEIE,KAFJ,EAGIC,KAHJ,EAIIC,MAJJ,EAKIC,cALJ,CAFc,EASdC,UATc,CAAlB",
      "sourceRoot": "/home/emils/Documents/Code/Libraries/create-component/scripts/",
      "sourcesContent": [
        "import {src, dest, series, parallel} from 'gulp';\nimport template from 'gulp-template';\nimport rename from 'gulp-rename';\nimport chalk from 'chalk';\nimport {argv} from 'yargs';\nimport fs from 'fs';\n\n// TO RUN \n// gulp --gulpfile scripts/createComponent.babel.js --name \"Penis\"\n\n\n\n// Function called to throw any kind of an error\nconst createError = (errorMessage) => {\n    throw chalk.white.bgRed.bold(errorMessage)\n}\n\n// Extracting component name provided by user through the --name flag\nconst nameArg = argv.name\n\n// Checking the validity of name variable given by user\nif (!nameArg || nameArg === true || nameArg.replace(' ', '').length === 0) {\n    createError(`\n        A name is required to create a container. \n        You can do so by running: \n        npm run create:container --name yourContainerName\n    `)\n}\n\n// Converts any name given by user to one where the first character is uppercase\nconst name = nameArg.charAt(0).toUpperCase() + nameArg.slice(1)\n\nconst destDir = `../src/components/${name}`\n\nconst assertContainerDoesNotExist = (done) => {\n    const containerDirectoryExists = fs.existsSync(`../src/components/${name}`)\n    if (containerDirectoryExists) {\n        createError(`Could not create container, because the directory: '../src/components/${name}' already exists`)\n        done()\n    }\n    done()\n}\n\nconst component = () => {\n    return src('templates/Component.js')\n        .pipe(rename(`${name}.js`))\n        .pipe(template({name}))\n        .pipe(dest(destDir));\n}\n\nconst story = () => {\n    return src('templates/Story.js')\n        .pipe(rename(`${name}.stories.js`))\n        .pipe(template({name}))\n        .pipe(dest(destDir))\n}\n\nconst index = () => {\n    return src(`templates/index.js`)\n        .pipe(template({name}))\n        .pipe(dest(destDir))\n}\n\nconst styles = () => {\n    return src('templates/Styles.scss')\n        .pipe(dest(destDir))\n}\n\nconst styleConstants = () => {\n    return src('templates/Constants.scss')\n        .pipe(dest(destDir))\n}\n\nconst logSuccess = (done) => {\n    console.log(chalk.white.bgGreen(`Successfully created container`))\n    console.log(`change ${chalk.green.bgBlack.bold('src/components/Penis')} to get started`)\n    done();\n}\n  \nexports.default = series(\n    assertContainerDoesNotExist,\n    parallel(\n        component,\n        story,\n        index,\n        styles,\n        styleConstants\n    ),\n    logSuccess\n)"
      ]
    },
    "sourceType": "script",
    "mtime": 1604558412470
  }
}